<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>